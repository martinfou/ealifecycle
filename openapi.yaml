openapi: 3.0.3
info:
  title: EALifecycle API
  description: |
    API for managing trading strategies and portfolios in the EALifecycle application.
    This API provides endpoints for creating, reading, updating, and deleting strategies and portfolios,
    as well as managing source code files for trading strategies.
  version: 1.0.0

servers:
  - url: http://localhost:8000/api/v1
    description: Local development server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Strategy:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
          nullable: true
        symbols_traded:
          type: string
          nullable: true
        magic_number:
          type: integer
          nullable: true
        status:
          type: string
        date_in_status:
          type: string
          format: date-time
        owner:
          type: string
        group:
          type: string
          nullable: true
        timeframes:
          type: array
          items:
            type: string
        primary_timeframe:
          type: string
        has_source_code:
          type: boolean
        source_code_filename:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    Portfolio:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        description:
          type: string
          nullable: true
        owner:
          type: string
        group:
          type: string
          nullable: true
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        strategies:
          type: array
          items:
            $ref: '#/components/schemas/Strategy'

    Error:
      type: object
      properties:
        message:
          type: string
        errors:
          type: object
          additionalProperties:
            type: array
            items:
              type: string

security:
  - bearerAuth: []

paths:
  /strategies:
    get:
      summary: List strategies
      description: Returns a paginated list of strategies accessible to the authenticated user
      responses:
        '200':
          description: List of strategies
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Strategy'
                  links:
                    type: object
                  meta:
                    type: object
        '401':
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    post:
      summary: Create a new strategy
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - timeframe_ids
                - primary_timeframe_id
                - status_id
              properties:
                name:
                  type: string
                description:
                  type: string
                symbols_traded:
                  type: string
                magic_number:
                  type: integer
                timeframe_ids:
                  type: array
                  items:
                    type: integer
                primary_timeframe_id:
                  type: integer
                group_id:
                  type: integer
                status_id:
                  type: integer
      responses:
        '201':
          description: Strategy created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Strategy'
        '422':
          description: Validation error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /strategies/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    
    get:
      summary: Get a specific strategy
      responses:
        '200':
          description: Strategy details
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Strategy'
        '403':
          description: Unauthorized
        '404':
          description: Strategy not found

    put:
      summary: Update a strategy
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - timeframe_ids
                - primary_timeframe_id
                - status_id
              properties:
                name:
                  type: string
                description:
                  type: string
                symbols_traded:
                  type: string
                magic_number:
                  type: integer
                timeframe_ids:
                  type: array
                  items:
                    type: integer
                primary_timeframe_id:
                  type: integer
                group_id:
                  type: integer
                status_id:
                  type: integer
      responses:
        '200':
          description: Strategy updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Strategy'
        '403':
          description: Unauthorized
        '422':
          description: Validation error

    delete:
      summary: Delete a strategy
      responses:
        '204':
          description: Strategy deleted
        '403':
          description: Unauthorized
        '404':
          description: Strategy not found

  /strategies/{id}/upload:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    
    post:
      summary: Upload source code for a strategy
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - source_code_file
              properties:
                source_code_file:
                  type: string
                  format: binary
      responses:
        '200':
          description: File uploaded successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Strategy'
        '403':
          description: Unauthorized
        '422':
          description: Validation error

  /strategies/{id}/download:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    
    get:
      summary: Download source code for a strategy
      responses:
        '200':
          description: File download
          content:
            application/octet-stream:
              schema:
                type: string
                format: binary
        '403':
          description: Unauthorized
        '404':
          description: File not found

  /portfolios:
    get:
      summary: List portfolios
      description: Returns a paginated list of portfolios accessible to the authenticated user
      responses:
        '200':
          description: List of portfolios
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Portfolio'
                  links:
                    type: object
                  meta:
                    type: object
        '401':
          description: Unauthenticated

    post:
      summary: Create a new portfolio
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                description:
                  type: string
                group_id:
                  type: integer
                strategy_ids:
                  type: array
                  items:
                    type: integer
      responses:
        '201':
          description: Portfolio created
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Portfolio'
        '422':
          description: Validation error

  /portfolios/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    
    get:
      summary: Get a specific portfolio
      responses:
        '200':
          description: Portfolio details
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Portfolio'
        '403':
          description: Unauthorized
        '404':
          description: Portfolio not found

    put:
      summary: Update a portfolio
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
              properties:
                name:
                  type: string
                description:
                  type: string
                group_id:
                  type: integer
                strategy_ids:
                  type: array
                  items:
                    type: integer
      responses:
        '200':
          description: Portfolio updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Portfolio'
        '403':
          description: Unauthorized
        '422':
          description: Validation error

    delete:
      summary: Delete a portfolio
      responses:
        '204':
          description: Portfolio deleted
        '403':
          description: Unauthorized
        '404':
          description: Portfolio not found 